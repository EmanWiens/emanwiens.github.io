{
    "projects": [
        {
            "name": "Car OBD II", 
            "introduction": "Most modern cars use what is known as <a href=\"https://en.wikipedia.org/wiki/On-board_diagnostics\">On-board diagnostic</a>. I did some research so I can do basic diagnostics on my car. ", 
            "components": [
                {
                    "link": "https://www.amazon.ca/dp/B011NSX27A?ref=ppx_yo2ov_dt_b_fed_asin_title", 
                    "text": "Bluetooth OBD II Scanner"
                }
            ],
            "images": [

            ],
            "iterations": [
                {
                    "blurbs": [
                        {
                            "title": "Connecting to Bluetooth", 
                            "text": "Connect the OBD II scanner into the slot in your car. I used Linux on my laptop to connect to it. The device will pair but does not connect so I had to <a href=\"https://askubuntu.com/questions/248817/how-to-i-connect-a-raw-serial-terminal-to-a-bluetooth-connection\">connect a raw serial terminal to a bluetooth connection</a>. To connect to the raw serial use the command <code>sudo rfcomm connect /dev/rfcomm0 MAC_ID 1 &</code>. For more context, /dev/ is where input device files generally reside."
                        }, 
                        {
                            "title": "Scanner software", 
                            "text": "There are a couple of <b>open source</b> options to read the scanner output. I used a program that was based on <a href=\"https://www.obdtester.com/pyobd\">pyOBD</a>, an open source program. <a href=\"https://github.com/barracuda-fsh/pyobd\">The version of pyOBD<a/> I used had been reworked a little and it worked well. The documentation provided was straight forward and I followed it to ge the program running. Another option is the <a href=\"\">python obd library</a> for more finetuned control of the data."
                        }
                    ]
                }
            ]
        }
    ]
}